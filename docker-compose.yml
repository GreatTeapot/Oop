networks:
  dev:


services:
  app:
    build:
      context: backend
      network: host  
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - dev


  # FRONTEND SERVICE
  frontend: 
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    networks:
      - dev
    ports:
      - "3000:3000"
    depends_on:
      - app


  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: s
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev



  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - static_volume:/usr/src/app/static/
      # - media_volume:/usr/src/app/media/
    ports:
      - "80:80"
    depends_on:
      - app
      - frontend
    networks:
      - dev



volumes:
  postgres_data:
  pgadmin-data:
